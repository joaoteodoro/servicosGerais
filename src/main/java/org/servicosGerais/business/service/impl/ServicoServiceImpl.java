/*
 * Created on 7 jun 2017 ( Time 11:29:14 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.servicosGerais.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import org.servicosGerais.bean.Servico;
import org.servicosGerais.bean.jpa.ServicoEntity;
import java.util.Date;
import java.util.List;
import org.servicosGerais.business.service.ServicoService;
import org.servicosGerais.business.service.mapping.ServicoServiceMapper;
import org.servicosGerais.data.repository.jpa.ServicoJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of ServicoService
 */
@Component
@Transactional
public class ServicoServiceImpl implements ServicoService {

	@Resource
	private ServicoJpaRepository servicoJpaRepository;

	@Resource
	private ServicoServiceMapper servicoServiceMapper;
	
	@Override
	public Servico findById(Integer id) {
		ServicoEntity servicoEntity = servicoJpaRepository.findOne(id);
		return servicoServiceMapper.mapServicoEntityToServico(servicoEntity);
	}

	@Override
	public List<Servico> findAll() {
		Iterable<ServicoEntity> entities = servicoJpaRepository.findAll();
		List<Servico> beans = new ArrayList<Servico>();
		for(ServicoEntity servicoEntity : entities) {
			beans.add(servicoServiceMapper.mapServicoEntityToServico(servicoEntity));
		}
		return beans;
	}

	@Override
	public Servico save(Servico servico) {
		return update(servico) ;
	}

	@Override
	public Servico create(Servico servico) {
		ServicoEntity servicoEntity = servicoJpaRepository.findOne(servico.getId());
		if( servicoEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		servicoEntity = new ServicoEntity();
		servicoServiceMapper.mapServicoToServicoEntity(servico, servicoEntity);
		ServicoEntity servicoEntitySaved = servicoJpaRepository.save(servicoEntity);
		return servicoServiceMapper.mapServicoEntityToServico(servicoEntitySaved);
	}

	@Override
	public Servico update(Servico servico) {
		ServicoEntity servicoEntity = servicoJpaRepository.findOne(servico.getId());
		servicoServiceMapper.mapServicoToServicoEntity(servico, servicoEntity);
		ServicoEntity servicoEntitySaved = servicoJpaRepository.save(servicoEntity);
		return servicoServiceMapper.mapServicoEntityToServico(servicoEntitySaved);
	}

	@Override
	public void delete(Integer id) {
		servicoJpaRepository.delete(id);
	}

	public ServicoJpaRepository getServicoJpaRepository() {
		return servicoJpaRepository;
	}

	public void setServicoJpaRepository(ServicoJpaRepository servicoJpaRepository) {
		this.servicoJpaRepository = servicoJpaRepository;
	}

	public ServicoServiceMapper getServicoServiceMapper() {
		return servicoServiceMapper;
	}

	public void setServicoServiceMapper(ServicoServiceMapper servicoServiceMapper) {
		this.servicoServiceMapper = servicoServiceMapper;
	}

}
