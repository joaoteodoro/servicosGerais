/*
 * Created on 7 jun 2017 ( Time 11:28:53 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
package org.servicosGerais.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.servicosGerais.bean.Servico;
import org.servicosGerais.business.service.ServicoService;
import org.servicosGerais.web.listitem.ServicoListItem;

/**
 * Spring MVC controller for 'Servico' management.
 */
@Controller
public class ServicoRestController {

	@Resource
	private ServicoService servicoService;
	
	@RequestMapping( value="/items/servico",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ServicoListItem> findAllAsListItems() {
		List<Servico> list = servicoService.findAll();
		List<ServicoListItem> items = new LinkedList<ServicoListItem>();
		for ( Servico servico : list ) {
			items.add(new ServicoListItem( servico ) );
		}
		return items;
	}
	
	@RequestMapping( value="/servico",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Servico> findAll() {
		return servicoService.findAll();
	}

	@RequestMapping( value="/servico/{id}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Servico findOne(@PathVariable("id") Integer id) {
		return servicoService.findById(id);
	}
	
	@RequestMapping( value="/servico",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Servico create(@RequestBody Servico servico) {
		return servicoService.create(servico);
	}

	@RequestMapping( value="/servico/{id}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Servico update(@PathVariable("id") Integer id, @RequestBody Servico servico) {
		return servicoService.update(servico);
	}

	@RequestMapping( value="/servico/{id}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("id") Integer id) {
		servicoService.delete(id);
	}
	
}
