/*
 * Created on 7 jun 2017 ( Time 11:29:02 )
 * Generated by Telosys Tools Generator ( version 2.1.1 )
 */
// This Bean has a basic Primary Key (not composite) 

package org.servicosGerais.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

import org.servicosGerais.bean.enun.TipoServico;

/**
 * Persistent class for entity stored in table "servico"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="servico", catalog="servicos_gerais" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ServicoEntity.countAll", query="SELECT COUNT(x) FROM ServicoEntity x" )
} )
public class ServicoEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Integer    id           ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="data_entrada", nullable=false)
    private Date       dataEntrada  ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="data_saida")
    private Date       dataSaida    ;

    @Column(name="valor", nullable=false)
    private Float      valor        ;

    @Column(name="observacao", nullable=false, length=300)
    private String     observacao   ;
    
    @Column(name="tipo_servico", nullable=false, length=15)
    @Enumerated(EnumType.STRING)
    private TipoServico     tipoServico  ;

	// "clienteId" (column "cliente_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="servico", targetEntity=ServicoRoupasEntity.class)
    private List<ServicoRoupasEntity> listOfServicoRoupas;

    @ManyToOne
    @JoinColumn(name="cliente_id", referencedColumnName="id")
    private ClienteEntity cliente     ;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ServicoEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Integer id ) {
        this.id = id ;
    }
    public Integer getId() {
        return this.id;
    }

    //--- DATABASE MAPPING : tipo_servico ( VARCHAR ) 
    public void setTipoServico( TipoServico tipoServico ) {
        this.tipoServico = tipoServico;
    }
    public TipoServico getTipoServico() {
        return this.tipoServico;
    }
    
    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : data_entrada ( DATETIME ) 
    public void setDataEntrada( Date dataEntrada ) {
        this.dataEntrada = dataEntrada;
    }
    public Date getDataEntrada() {
        return this.dataEntrada;
    }

    //--- DATABASE MAPPING : data_saida ( DATETIME ) 
    public void setDataSaida( Date dataSaida ) {
        this.dataSaida = dataSaida;
    }
    public Date getDataSaida() {
        return this.dataSaida;
    }

    //--- DATABASE MAPPING : valor ( FLOAT ) 
    public void setValor( Float valor ) {
        this.valor = valor;
    }
    public Float getValor() {
        return this.valor;
    }

    //--- DATABASE MAPPING : observacao ( VARCHAR ) 
    public void setObservacao( String observacao ) {
        this.observacao = observacao;
    }
    public String getObservacao() {
        return this.observacao;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfServicoRoupas( List<ServicoRoupasEntity> listOfServicoRoupas ) {
        this.listOfServicoRoupas = listOfServicoRoupas;
    }
    public List<ServicoRoupasEntity> getListOfServicoRoupas() {
        return this.listOfServicoRoupas;
    }

    public void setCliente( ClienteEntity cliente ) {
        this.cliente = cliente;
    }
    public ClienteEntity getCliente() {
        return this.cliente;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(dataEntrada);
        sb.append("|");
        sb.append(dataSaida);
        sb.append("|");
        sb.append(valor);
        sb.append("|");
        sb.append(tipoServico);
        sb.append("|");
        sb.append(observacao);
        return sb.toString(); 
    } 

}
